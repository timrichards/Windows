<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:clr="clr-namespace:System;assembly=System"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:DoubleFile">

    <local:Triggers x:Key="dataGridTriggers" x:Shared="False">
        <i:EventTrigger EventName="SelectionChanged">
            <local:DataGrid_ScrollIntoViewAction SelectionChanged="{Binding RelativeSource=
                {RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"/>
        </i:EventTrigger>
    </local:Triggers>
    
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="IsReadOnly" Value="True" />
        <!--could also set HeadersVisibility="Column": RowHeaderWidth may take care of this-->
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <!--SelectionUnit might be optional-->
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <!--Scroll item into view when selected programmatically by the view model-->
        <Setter Property="SelectedItem" Value="{Binding SelectedItem, Mode=TwoWay}"/>
        <Setter Property="local:SupplementaryInteraction.Triggers" Value="{StaticResource dataGridTriggers}"/>
    </Style>

    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}"/>
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style x:Key="styleBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="ForestGreen" />
        <Setter Property="BorderThickness" Value="2,0,0,0" />
    </Style>

    <Style TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
