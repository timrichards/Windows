- WithWinProgress(() => {});
- first tree view item is bold and the wrong forecolors, incl highlighted - treeview shouldn't have a selected item.
- tree map doesn't always show up at all; slow calc etc
- large file tree map blacks out switching between items 1 and 2 - item 1 has bitmap size of 1152: loaded too slow for it.
- wpf treemap
- Todo: save volume group.\nTodo: save include y/n
- fix slider in tree list

- Release mode doesn't want to show messagebox during scenario causing the lockout bug fixed in build 195:
	Keep are you sure dialog up while cancelling opening project and it will darken lockout in 194.
- App.TopWindow = this in "Activated"; but when closed find an ExtraWindow to set it to
- Search for 'a' then search again: searches for ''
- Show parent folder\this folder in rest of path
- clones lvs; and all dupe files lv?
- The todo list is not read-only while debugging.
- You can go to type definition on var right-click
- Look for ToArray(): LocalTreeNode etc OK as array for Length.
- string compare CompareTo()

- why does e.g. monkey_house have a nFolderScorer of 0?
- What is the distribution of sums of "random" hash folder score?
- Why does a folder with the same # items as subfolder have a different folder score? (i.e. no files here)
- Why are some folders white? Why do some folders not say they're duplicated?
- PresentationCore.dll: FormatException; InvalidCastException; ArgumentException (see output window)
- allow moving the window when darkened
- New Listing File dialog flashes when system choose folder dialog is shown
- tool tip to tree map title bar area
- go to button in tree map
- regex search
- save to both V1 and latest V as 2 files (in debug); convert V1 and compare to latest: for practice in consistency
- rollover highlight project image button text
- Click OK on a dialog and Double File disappears behind another app. -fix example: end of save listings it comes to front.
- Allow a notes field
- Allow rescan of drive, with history difference, or allow copying values of already saved to the new one
- Allow opening values of listing file that failed scanning
- compare mode - how is this folder different from that one besides looking at the details: show missing/different file.
- This folder has no exact copy: so please itemize in a report what the exact differences are to the nearest copy.
	- Show the global folder list which is ranked by similar neighbors; select this folder.
	- Allow a list of important files and directories to watch, with alerts; links; etc.:
		- Invert the exclusive principle. Start inclusive, not with an ignore list.
	- Folders and files that are missing; or that are different.
	- Invert the size matters principle: some of the most important files may go unnoticed: just a drop in the bucket.
	- Restore the ignore list: nobody cares about the Windows or Program Files directories. Don't make moron reports.
- A 64 bit hash has 1 chance in 18 quintillion. Do collision tests: e.g. run SHA1 against MD5. Put statistics under Advanced.
- last modified time as part of comparison; or notification: hash equal but mod times are different
- wolfram-alpha front-end; curate; data -> query language: what state are my backups in? What are the best queries to bring forward?
- compare the 4K vs 128K correlations to see what they caught. - quick see: nFolderCount1pt0 vs nFolderCount2
- Add folder name to suffix title Tree List: My Documents; Files in Folder: My Documents; Folders Here: My Documents; etc.
- Tree list is not updating from treemap selection - or maybe it's a drill down - didn't respond to tree map drill up. Did.
- Option to show drive label and model/serial in Volume text (Nickname)
- Allow sorting the tree view by drive letter, etc.
- Good that tree does not autoupdate: extra window. Allow filter by volume type, for example.
- allow two different file windows to point to two different folders: each new folder window should have its own children
- dupe vm event alerts: static vm internal counter or static transmit
- Sync To button in tree view
- Filtering user control header for tree list; tree view; files; search; duplicates: like search but restrict the view
- open project; nav save listings; cancel; nav nav; complete save listings; nav explorer create; cancel: should project page.
- show messagbox title
- Unimplemented code in DriveSerialStatic.cs which tries to scan all drives to find model # - not an issue: serial # usb is

- check properties that are only supposed to be set once to true: make them Set methods
- Allow method chaining: return this instead of void
- hash version is not shown to the user.
- should the 2-pass listing save go out to the fs twice or just cache all the filenames?
- Remove WidthListingFile and redo the ListingFile setter to internal - same goes for progress dialog though
- replace properties with converters
- replace DarkWindow with flyouts
- minimize progress/messagebox to task bar?
- Automatically add Width properties from LV base - not really worth making an expando out of it

- vertical scrollbar: window height clips volumes lv
- set hover bg same as bg in project lv for group etc
- allow user toggle showing free space
- UX tree map free space
- resource all stringets; en-us etc.
- auto layout? save layout?
- Apply async/await
- Who collaborates/reviews? Who wants to learn from this code base?
- Research runtime asserts vs unit testing online. Throw exceptions instead, perhaps.
	NUnit: replace MboxStatic assert with [TestMethod] and Assert.AreEqual, etc.
- services, decouple: Unity frameork: rewrite in Node/Angular; C++; Linux etc. Start these with unit testing.
- what C# features don't translate well to other languages like C++? is operator?
- neither is nor as are reflection. as is 20x slower though. p. 123
- Join() vs Block() - Join() completely locks up the Dispatcher? Does Block() wait At PushFrame() like a traffic cop?

- Count property is very slow on Dictionary even though it's an ICollection. List and stack to be trusted?
- Replace First() with FirstOnlyAssert()
- ToEnumerable() in FileDictionary cut 60MB off and did not take any time to make.
- TotalMilliseconds gotcha
- look for 0 ==    > 0 <   == 0   < 0 >  Count property;   etc.
	The Length property is guaranteed to be a O(1) operation.
	several types which support O(1) length lookup like ICollection<T> via a Count property.
- Convert.ToInt32 etc: use Util
- nullables should be type nullable = null; not var nullable = default(type);
- string.IsNullOrWhiteSpace has completely replaced IsNullOrEmpty 7/7/15
- Make the array[] a ReadOnlyCollection using Array.AsReadOnly<T>(T[] array). This method is an O(1) operation.
- check Count usage in loops
- replace .Cast with (ICollection<>)
- replace IEnumerable with ICollection where possible

99830 block is reserved: do not alert LocalOnNext. Next: 99837 on down
99800 next low assert
